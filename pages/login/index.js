import { Button, Checkbox, Form, Image, Input, message } from "antd";
import React, { useContext, useState } from "react";
import BaseLayout from "../../components/Layout/BaseLayout"; import css from "./style.module.css";
import { UserOutlined, LockOutlined } from "@ant-design/icons";
import { useTranslation } from "next-i18next";
import axios from "axios";
import { useRouter } from "next/router";
import BasketContext from "../../context/basketContext/BasketContext";
import sha256 from "sha256";
import Head from "next/head";
import ForgetPassword from "../../components/ForgetPassword";
export default function Login() {
  const router = useRouter();
  const { t } = useTranslation("login");
  const [username, setUsername] = useState();
  const [password, setPassword] = useState();
  const basketContext = useContext(BasketContext);
  const [toggle, setToggle] = useState(1); 
  const onFinish = (values) => { 
    var passwordHash = sha256(password); 
    const body = {func: "signIn",username: username,password: passwordHash,};  
    axios.post("/api/post/Gate", body).then((res) => {
        if (res.data.data.username) {
          message.success(t("Success"));
          localStorage.setItem("pkId", res.data.data.pkId);
          localStorage.setItem("token", res.data.data.token);
          localStorage.setItem("username", res.data.data.username);
          localStorage.setItem("lastname", res.data.data.lastname);
          // localStorage.setItem("phone", res.data.phone);
          localStorage.setItem("firstname", res.data.data.firstname);
          localStorage.setItem("state", res.data.data.state);
          localStorage.setItem("isSuperAdmin", res.data.data.isSuperAdmin);
          basketContext.getUserProfileFunction();
          router.push("/");
        } else {console.log("err login")}
      }).catch((err) => {console.log("err")}); 
  };
  const onFinishFailed = (errorInfo) => {
    // console.log("Failed:", errorInfo);
  };
  const registerBtn = () => {
    router.push("register");
  };
  const forgotPassword = (a) => {
    if (a === "1") {
      setToggle(1);
    } else {
      setToggle(0);
    }
  };
  return (
    <div> <Head><title>OBORTECH</title><meta name="description" content="Generated by create next app" /> <link rel="icon" href="img/HeaderLogo.png" /></Head>
      <BaseLayout pageName="login">
        <div className={css.Cont}>
          <div className={css.Cont2}>
            <div className={css.LoginTitle}> <Image alt="Obertech" preview={false} src="/img/OBORTECH_logo_H_clean.svg" width={250} /></div>
            <div className={css.FromCss}>
              {toggle === 1 ? (
                <Form name="normal_login" className={css.LoginForm} initialValues={{ remember: true, }} onFinish={onFinish} onFinishFailed={onFinishFailed}>
                  <Form.Item name="username" rules={[{ required: true, message: t("Please input your Username!")}]}>
                    <Input onChange={(e) => setUsername(e.target.value)} prefix={<UserOutlined className={css.IconCss} />} placeholder={t("User name")}/>
                  </Form.Item>
                  <Form.Item name="password" rules={[ { required: true, message: t("Please input your Password!")}]}>
                    <Input.Password onChange={(e) => setPassword(e.target.value)} prefix={<LockOutlined className={css.IconCss} />} type="password" placeholder={t("password")}/>
                  </Form.Item>
                  <Form.Item>
                    <Form.Item name="remember" valuePropName="checked" noStyle><Checkbox>{t("Remember me")}</Checkbox></Form.Item>
                    <a className={css.Forget} onClick={forgotPassword}>{t("Forgot password")}</a>
                  </Form.Item>
                  <Form.Item>
                    <div className={css.Login}>
                      <Button type="primary" htmlType="submit" className="login-form-button">{t("Log in")}
                      </Button>
                      <div className={css.OrRegister}>{t("New here")}?
                        <Button className={css.RegisterHover} onClick={registerBtn}type="link">{t("Create An Account")}</Button>
                      </div>
                    </div>
                  </Form.Item>
                </Form>
              ) : (<div className={css.ForgetPasswordCss}><ForgetPassword forgotPassword={forgotPassword} /></div>)}
            </div>
          </div>
        </div>
      </BaseLayout>
    </div>
  );
}
