import BaseLayout from "../components/Layout/BaseLayout";
import { Button, Divider, Input, Modal, Select, Spin } from "antd";
import Head from "next/head";
import { useContext, useEffect, useState } from "react";
import css from "./style.module.css";
import BasketContext from "../context/basketContext/BasketContext";
import { Footer } from "antd/lib/layout/layout";
import randomToken from "random-token";
import {ArrowRightOutlined,CheckOutlined, ExclamationCircleOutlined} from "@ant-design/icons";
import axios from "axios";
import { useTranslation } from "next-i18next";
import { Router, useRouter } from "next/router";
const { Search } = Input;
const { Option } = Select;
const { confirm } = Modal;
export default function Home(props) {
  const { t } = useTranslation("organization");
  const [addItemStyle, setAddItemStyle] = useState([css.addItemStyle]);
  const basketContext = useContext(BasketContext);
  const [orgIdState, setOrgIdState] = useState("");
  const [orgError, setOrgError] = useState("");
  const [spin, setSpin] = useState(false);
  const router = useRouter();
  
  useEffect(() => {
    basketContext.MenuKey();
    basketContext.basketStateFunc();
  
    tokenFunc();
   
  }, []);
  const tokenFunc = () =>{
    if(sessionStorage.getItem("item_key")){
      console.log("bn");
  }else{ 
    var token = randomToken(16);
    console.log("==> ",token);
    const amraa  = "amraa";
    sessionStorage.setItem("item_key", token);
  } 
  }
  const onSearch = (value) => {
    setSpin(true);
    setOrgError("");
    console.log("input value:", value);
    var tokenId = sessionStorage.getItem("item_key");
    const  body = {
      func: "findOrg",
      orgid: value,
      // userToken: tokenId,
    }
    if(value == ""){
      setSpin(false);
      console.log("hoosn value: ", value); 
      setOrgIdState("");
    }else {
      setSpin(true);
      axios.post("/api/post/Gate", body).then((res)=>{ 
        console.log(res.data);
        if(res.data.data){
          sessionStorage.setItem("orgId", res.data.data.map.name)
          setOrgIdState(res.data.data.map.name);
          localStorage.setItem("orgId", res.data.data.map.name);
          setOrgError("");
          basketContext.orgIdLocal();
          setSpin(false);
        }else {
          console.log("orgID bhq" );
           setOrgIdState("");
           setOrgError(t("There is no organization id!!"));
           localStorage.setItem("orgId", "0");
           basketContext.orgIdLocal();
          setSpin(false);
        } 
      }).catch((err)=>{
        console.log("err", err);
      })
    }
   
  };
  const showConfirm = () => {
    confirm({
      title: 'Do you want to go to item Page?',
      icon: <ExclamationCircleOutlined />,
      content: 'Some descriptions',
  
      onOk() {
        console.log('OK');
        router.push("/items")
      },
  
      onCancel() {
        setOrgError("");
        setOrgIdState("");
        console.log('Cancel');

      },
    });
  };
  const handleChange = (value) => {
    console.log(value);
    if(value == 0){
      showConfirm();
    }

  };
  return (
    <div>
      <Head>
        <title>OBORTECH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="img/HeaderLogo.png" />
      </Head>
      <BaseLayout pageName="home" addItemStyle={addItemStyle}>
        <div className={css.SearchCss}>
          <div className={css.SearchInput}>
            <Divider>{t("Search of organizations")}</Divider>
            <Search placeholder={t("Enter your organization ID")} allowClear  size="large" onSearch={onSearch} enterButton />

              {orgIdState === "" ? spin ? <Spin className={css.SpinCss}/> : orgError === "" ? "" :  <div className={css.OrgError}>{orgError}</div> : 
              <>{spin ? <Spin className={css.SpinCss}/> : <div className={css.OrgIdCss}>{t("Organization name")} :
              <span className={css.SpanCss}>
              <Select defaultValue={orgIdState} style={{marginLeft: "10px",width: 150, fontSize: "17px"}}onChange={handleChange}>
                <Option value="0">{orgIdState}</Option> 
              </Select></span>

                <div className={css.Popcss}>
                  <div className={css.PopCirc}>   
                  <CheckOutlined style={{fontSize: "37px", color: "37px"}}/>
                  </div>
                  <div className={css.TitleCirc}>
                    <div>{orgIdState}</div>
                    <div> descript text text text</div>
                  </div>
                  
                  <div className={css.BtnPop}> <Button style={{background: "#7de97d", fontWeight: "500"}} size="large" onClick={()=> router.push("/items")}>Go to items</Button></div>
                </div>
              {/* {orgIdState === t("There is no organization id!!") ? "" : 
              <div> 
                <Button onClick={()=> router.push("/items")} style={{fontSize: "15px", fontWeight: "500", textTransform: "uppercase", marginTop: "10px"}}>go to Item page <ArrowRightOutlined /> </Button> </div>} */}
              </div>}</>} 

              {/* { spin ? <Spin className={css.SpinCss}/> : orgError === "" ? "" :  <div className={css.OrgError}>{orgError}</div>} */}
 
          </div> 
        </div>
      </BaseLayout>
    </div>
  );
}
